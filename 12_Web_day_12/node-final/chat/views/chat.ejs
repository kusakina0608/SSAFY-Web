<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅냥이</title>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        let firstNameIdx = Math.floor(Math.random()*57);
        const nickName = prompt("이름을 입력하세요");
        let tmpColor = (Math.round((Math.random() * 0x44) + 0xaa)).toString(16) + (Math.round((Math.random() * 0x44) + 0xaa)).toString(16) + (Math.round((Math.random() * 0x44) + 0xaa)).toString(16);
        let newUser = true;
    </script>
    <!-- CSS only -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css" integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">
</head>
<body>
    <div class="input-group p-5 fixed-bottom footer-affix affix-item">
        <span class="input-group-text" id="basic-addon1">fsda</span>
        <input type="text" class="form-control" id="chat-text" aria-label="Username" aria-describedby="basic-addon1">
        <button id="send-button" class="btn btn-primary">보내기</button>
        <button type="button" class="disconnect-button btn btn-danger">나가기</button>
    </div>
    <div class="p-5 mb-5">
        <ul id="msglist" class="chat-list list-group">
            <li class="list-group-item"> &nbsp;</li>
            <li class="list-group-item"> &nbsp;</li>
            <li class="list-group-item"> &nbsp;</li>
            <li class="list-group-item"> &nbsp;</li>
            <li class="list-group-item"> &nbsp;</li>
            <li class="list-group-item"> &nbsp;</li>
        </ul>
        <ul class="chat-list list-group">
            <li class="list-group-item"> &nbsp;</li>
        </ul>
    </div>
    <script>
        const chatList = document.querySelector("#msglist");
        const chatText = document.querySelector("#chat-text");
        const sendButton = document.querySelector("#send-button");
        const disconnectButton = document.querySelector(".disconnect-button");
        document.querySelector("#basic-addon1").innerHTML = "입력";
        const socket = io("/chat-room");
        socket.emit("join chat", nickName);
        sendButton.addEventListener("click", function(e){
            e.preventDefault(); // form tag 에서 엔터 키를 누르거나 버튼을 누르면 새로고침이 되며 데이터가 전송되는 것을 막는 method
            let msg = `${firstNameIdx}|FIRST_NAME_IDX${nickName}|USER_NAME${chatText.value}|USER_COLOR${tmpColor}`;
            socket.emit("chat message", msg);
            chatText.value = "";
        })
        chatText.addEventListener("keypress", function(e){
            if(e.keyCode == 13){
                e.preventDefault(); // form tag 에서 엔터 키를 누르거나 버튼을 누르면 새로고침이 되며 데이터가 전송되는 것을 막는 method
            let msg = `${firstNameIdx}|FIRST_NAME_IDX${nickName}|USER_NAME${chatText.value}|USER_COLOR${tmpColor}`;
                socket.emit("chat message", msg);
                chatText.value = "";
            }
        });
        disconnectButton.addEventListener("click", function(){
            socket.emit("exit chat", nickName);
            socket.disconnect();
            alert("연결이 종료되었습니다.");
        });
        socket.on("chat message", msg => {
            const newLine = document.createElement("li");
            newLine.innerHTML = msg.split("|USER_COLOR")[0]
            newLine.classList.add("list-group-item");
            newLine.style.backgroundColor = "#" + msg.split("|USER_COLOR")[1];
            chatList.append(newLine);
            // document.getElementById('msg').scrollTop = document.getElementById('msg').scrollHeight;
            setTimeout(function() {window.scrollTo(0, chatList.scrollHeight);},1)
        })
        socket.on("chat history", msg => {
            if(newUser){
                newUser = false;
                msg.forEach(el => {
                    const newLine = document.createElement("li");
                    newLine.innerHTML = el.split("|USER_COLOR")[0]
                    newLine.classList.add("list-group-item");
                    newLine.style.backgroundColor = "#" + el.split("|USER_COLOR")[1];
                    chatList.append(newLine);
                    setTimeout(function() {window.scrollTo(0, chatList.scrollHeight);},1)
                });
            }
        })
        socket.on("join chat", name => {
            const newLine = document.createElement("li");
            newLine.innerHTML = `${name}님이 채팅방에 입장하셨습니다.`;
            newLine.classList.add("list-group-item");
            chatList.append(newLine);
        })
        socket.on("exit chat", name => {
            const newLine = document.createElement("li");
            newLine.innerHTML = `${name}님이 채팅방에서 퇴장하셨습니다.`;
            newLine.classList.add("list-group-item");
            chatList.append(newLine);
        })
    </script>
    <!-- JavaScript and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js" integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>
</body>
</html>